{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Aquatrack app",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "This is a documentation of Aquatrack app\n"
  },
  "servers": [
    {
      "url": "https://aqua-track-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Water",
      "description": "Operations about water."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User register",
        "operationId": "registerUser",
        "description": "Registeration a new user for Aquatrack",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "user's email",
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "description": "user's password",
                    "type": "string",
                    "example": "agdgdjhagsdjag"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registeration a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Authorization a user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "user's email",
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "description": "user's password",
                    "type": "string",
                    "example": "agdgdjhagsdjag"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authorization a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/login"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "User logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Delete user session"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh-access-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Token refresh",
        "operationId": "refreshUsersSession",
        "description": "Token refresh ",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/login"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/currentUser": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "operationId": "getUserById",
        "description": "Get current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found current user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user",
        "operationId": "updateUser",
        "description": "Update current user by token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "gender": {
                    "description": "user's gender",
                    "type": "string",
                    "enum": [
                      "man",
                      "woman"
                    ]
                  },
                  "weight": {
                    "description": "Your weight in kilograms:",
                    "type": "number",
                    "example": 55
                  },
                  "sportHours": {
                    "description": "The time of active participation in sports",
                    "type": "number",
                    "example": 45
                  },
                  "waterAmount": {
                    "description": "how much water you will drink",
                    "type": "number",
                    "example": 1.8
                  },
                  "photo": {
                    "description": "User's photo",
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/delucsi8d/image/upload/v1722184393/avatar_gwefos.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get amount users",
        "operationId": "getAmountUsers",
        "description": "Get amount users",
        "security": [],
        "responses": {
          "200": {
            "description": "Get amount users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "usersAmount"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get amount users!"
                    },
                    "usersAmount": {
                      "type": "object",
                      "required": [
                        "usersAmount"
                      ],
                      "properties": {
                        "usersAmount": {
                          "type": "number",
                          "example": 1200
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update an entry of Water by id",
        "operationId": "updateWaterInfo",
        "description": "Update an entry of Water by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": {
                    "description": "time record",
                    "type": "string",
                    "example": "2024-07-24T10:12:22Z"
                  },
                  "amount": {
                    "description": "The value of the water used",
                    "type": "integer",
                    "example": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update an entry of Water by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found an entry of Water with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "example": "2024-07-31T11:30:00Z"
                        },
                        "amount": {
                          "type": "integer",
                          "example": 0
                        },
                        "userId": {
                          "type": "string",
                          "example": "66a8b8292860c6745f910c96"
                        },
                        "_id": {
                          "type": "string",
                          "example": "66aa24cf0c0945c2457157e6"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-2"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete an entry of Water by id",
        "operationId": "deleteWaterInfo",
        "description": "Delete an entry of Water by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete an entry of Water by id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-2"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/daily": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get entries of water for the day",
        "operationId": "getInfoWaterDay",
        "description": "Get entries of water for the day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-07-25"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "default": "time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched water consumption for the day!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched water consumption for the day!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "66aa24cf0c0945c2457157e6"
                          },
                          "time": {
                            "type": "string",
                            "example": "2024-07-31T11:30:00Z"
                          },
                          "amount": {
                            "type": "integer",
                            "example": 0
                          },
                          "userId": {
                            "type": "string",
                            "example": "66a8b8292860c6745f910c96"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/monthly": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get entries of water for month",
        "operationId": "getInfoWaterMonth",
        "description": "Get entries of water for month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "string",
              "example": "2024-07"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched water consumption for the month!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "totalWaterAmount",
                    "water"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched water consumption for the month!"
                    },
                    "totalWaterAmount": {
                      "type": "number",
                      "example": 1000
                    },
                    "water": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "example": "2024-07-01"
                              },
                              "amount": {
                                "type": "integer",
                                "example": 0
                              },
                              "userId": {
                                "type": "string",
                                "example": "66a8b8292860c6745f910c96"
                              },
                              "_id": {
                                "type": "string",
                                "example": "66aa24cf0c0945c2457157e6"
                              },
                              "daylyProgress": {
                                "type": "string",
                                "example": "0%"
                              },
                              "waterAmount": {
                                "type": "string",
                                "example": "1.75L"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create an entry of Water",
        "operationId": "createwaterInfo",
        "description": "Create an entry of Water with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "time",
                  "amount"
                ],
                "properties": {
                  "time": {
                    "description": "time record",
                    "type": "string",
                    "example": "2024-07-24T10:12:22Z"
                  },
                  "amount": {
                    "description": "The value of the water used",
                    "type": "integer",
                    "example": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an entry of Water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created an entry of Water!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "example": "2024-07-31T11:30:00Z"
                        },
                        "amount": {
                          "type": "integer",
                          "example": 0
                        },
                        "userId": {
                          "type": "string",
                          "example": "66a8b8292860c6745f910c96"
                        },
                        "_id": {
                          "type": "string",
                          "example": "66aa24cf0c0945c2457157e6"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "example@gmail.com"
          },
          "gender": {
            "description": "user's gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ]
          },
          "weight": {
            "description": "Your weight in kilograms:",
            "type": "number",
            "example": 55
          },
          "sportHours": {
            "description": "The time of active participation in sports",
            "type": "number",
            "example": 45
          },
          "waterAmount": {
            "description": "how much water you will drink",
            "type": "number",
            "example": 1.8
          },
          "photo": {
            "description": "User's photo",
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/delucsi8d/image/upload/v1722184393/avatar_gwefos.png"
          }
        }
      },
      "login": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "description": "access token",
            "type": "string",
            "example": "J/rbRcndttkAH/i8FwzkgbhaL2hywdsU4rRTLshX"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User does not exist!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404-2": {
        "description": "Info about water not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Info about water not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Info about water not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}